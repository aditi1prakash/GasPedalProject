
/*
 * Filename: sc_adc_type.h
 *
 * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
 */

#ifndef _H_DEFINE_SC_ADC_TYPE
#define _H_DEFINE_SC_ADC_TYPE

#include "project.h"
#include "global.h"
#include "rte_types.h"

/* USER CODE START SC_ADC_INCLUDES */

/* USER CODE END SC_ADC_INCLUDES */



/**********************************************************************
 *       Type Definition for SC_ADC signal    
 **********************************************************************/

/* USER CODE START SC_ADC_USERDEFINITIONS */

/* USER CODE END SC_ADC_USERDEFINITIONS */

typedef 
/* USER CODE START SC_ADC_SIGNALDATADEFINITION */
struct
{
	#error "Provide your data structure"
} 
/* USER CODE END SC_ADC_SIGNALDATADEFINITION */
SC_ADC_data_t;

/* USER CODE START InitSC_ADC */
#error "Provide a sensible init value"
#define SC_ADC_INIT_DATA ((SC_ADC_data_t){})
/* USER CODE END InitSC_ADC */


/**
 * Default IN driver API
 * \param SC_ADC_data_t *const data : [OUT] scaled data read from the driver
 * \return RC_SUCCESS is all was ok, error code otherwise
 */
RC_t SC_ADC_driverIn(SC_ADC_data_t *const data);




/* USER CODE START SC_ADC_USERFUNCTIONS */

/* USER CODE END SC_ADC_USERFUNCTIONS */


#endif